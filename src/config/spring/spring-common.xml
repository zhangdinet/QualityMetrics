<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd">

  <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" >
        <property name="url" value="jdbc:mysql://localhost/qualitymetrics?useUnicode=true&amp;characterEncoding=UTF-8"></property>
        <property name="username" value="root"></property>
		<property name="password" value="root"></property>
        <!--
        	<property name="url" value="jdbc:mysql://localhost/qualitymetrics?useUnicode=true&amp;characterEncoding=UTF-8"></property>
			<property name="username" value="root"></property>
			<property name="password" value="root"></property>
		-->
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
      	<property name="minIdle" value="1" />
      	<property name="maxActive" value="20" />
      	<!-- 配置获取连接等待超时的时间 -->
      	<property name="maxWait" value="60000" />
      	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      	<property name="minEvictableIdleTimeMillis" value="300000" />
      	<property name="validationQuery" value="SELECT 'x'" />
      	<property name="testWhileIdle" value="true" />
      	<property name="testOnBorrow" value="false" />
      	<property name="testOnReturn" value="false" />
      	<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
      	<property name="poolPreparedStatements" value="false" />
      	<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
    </bean>

    <!-- 配置testlink数据源 -->
    <bean id="dataSource_testlink" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" >
        <!--
        <property name="url" value="jdbc:mysql://localhost/qualitymetrics?useUnicode=true&amp;characterEncoding=UTF-8"></property>
        <property name="username" value="root"></property>
        <property name="password" value="root"></property>
         -->
        	<property name="url" value="jdbc:mysql://172.16.34.136/testlink?useUnicode=true&amp;characterEncoding=UTF-8"></property>
        	<property name="username" value="testlink"></property>
        	<property name="password" value="testlink"></property>
         
        <!-- 配置初始化大小、最小、最大 -->
     	<property name="initialSize" value="1" />
      	<property name="minIdle" value="1" /> 
      	<property name="maxActive" value="20" />
      	<!-- 配置获取连接等待超时的时间 -->
      	<property name="maxWait" value="60000" />
      	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      	<property name="minEvictableIdleTimeMillis" value="300000"/>
      	<property name="validationQuery" value="SELECT 'x'"/>
      	<property name="testWhileIdle" value="true" />
      	<property name="testOnBorrow" value="false" />
      	<property name="testOnReturn" value="false" />
      	<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
      	<property name="poolPreparedStatements" value="false" />
      	<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
    </bean>
 	
 	<!-- 配置Redmine数据源 -->
    <bean id="dataSource_redmine" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" >
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property> 
        
	        <property name="url" value="jdbc:mysql://172.16.34.170/bitnami_redmine?useUnicode=true&amp;characterEncoding=UTF-8"></property>
	        <property name="username" value="redmine"></property>
	        <property name="password" value="redmine"></property>
        <!-- 
        <property name="url" value="jdbc:mysql://localhost/bitnami_redmine?useUnicode=true&amp;characterEncoding=UTF-8"></property>
        <property name="username" value="root"></property>
        <property name="password" value="root"></property>
         -->
        
        <!-- 配置初始化大小、最小、最大 -->
     	<property name="initialSize" value="1" />
      	<property name="minIdle" value="1" /> 
      	<property name="maxActive" value="20" />
      	<!-- 配置获取连接等待超时的时间 -->
      	<property name="maxWait" value="60000" />
      	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒-->
      	<property name="minEvictableIdleTimeMillis" value="300000" />
      	<property name="validationQuery" value="SELECT 'x'" />
      	<property name="testWhileIdle" value="true" />
      	<property name="testOnBorrow" value="false" />
      	<property name="testOnReturn" value="false" />
      	<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
      	<property name="poolPreparedStatements" value="false" />
      	<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
    </bean>

    <!-- 配置Sonar数据源 -->
     <bean id="dataSource_sonar" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" >
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
			<property name="url" value="jdbc:mysql://172.16.55.103/sonar?useUnicode=true&amp;characterEncoding=UTF-8"></property>
			<property name="username" value="sonar"></property>
			<property name="password" value="sonar"></property>
		<!--
			<property name="url" value="jdbc:mysql://172.16.55.103/sonar?useUnicode=true&amp;characterEncoding=UTF-8"></property>
			<property name="username" value="root"></property>
			<property name="password" value="root"></property>
			
        	<property name="url" value="jdbc:mysql://localhost/sonar?useUnicode=true&amp;characterEncoding=UTF-8"></property>
        	<property name="username" value="root"></property>
        	<property name="password" value="root"></property>
		-->
     	<property name="initialSize" value="1" />
      	<property name="minIdle" value="1" />
      	<property name="maxActive" value="20" />
      	<property name="maxWait" value="60000" />
      	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      	<property name="minEvictableIdleTimeMillis" value="300000" />
      	<property name="validationQuery" value="SELECT 'x'" />
      	<property name="testWhileIdle" value="true" />
      	<property name="testOnBorrow" value="false" />
      	<property name="testOnReturn" value="false" />
      	<property name="poolPreparedStatements" value="false" />
      	<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
    </bean>
 	
 	 <!-- 配置SessionFactory zhangdi todo 考虑改为Context-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>com.env.qualitymetrics.entity.User</value>
                <value>com.env.qualitymetrics.entity.Project</value>
                <value>com.env.qualitymetrics.entity.Source</value>
                <value>com.env.qualitymetrics.entity.Project_source</value>
                <value>com.env.qualitymetrics.entity.Project_source_pk</value>
                <value>com.env.qualitymetrics.entity.Rankings</value>
                <value>com.env.qualitymetrics.entity.Ranking_detail</value>
                <value>com.env.qualitymetrics.entity.Ranking_detail_pk</value>
                <value>com.env.qualitymetrics.entity.Sprint</value>
                <value>com.env.qualitymetrics.entity.Sprint_source</value>
                <value>com.env.qualitymetrics.entity.Sprint_source_pk</value>
                <value>com.env.qualitymetrics.entity.Sprint_score_item</value>
                <value>com.env.qualitymetrics.entity.Sprint_score_item_pk</value>
                <value>com.env.qualitymetrics.entity.Score_item</value> 
                <value>com.env.qualitymetrics.entity.Project_ratepatch_history</value>
                <value>com.env.qualitymetrics.entity.Project_ratepatch_history_pk</value>
                <value>com.env.qualitymetrics.entity.Year</value>
                <value>com.env.qualitymetrics.entity.Ranking_sprint</value>
                <value>com.env.qualitymetrics.entity.Ranking_sprint_pk</value>
                <value>com.env.qualitymetrics.entity.Ranking_sprint_score_item</value>
                <value>com.env.qualitymetrics.entity.Ranking_sprint_score_item_pk</value>
                <value>com.env.qualitymetrics.entity.Indicator_weight</value>
                <value>com.env.qualitymetrics.entity.UserProject</value>
            </list>
        </property>
    </bean>
      
    <!-- 配置一个事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
 	
 	<!-- 配置事务，使用代理的方式 -->
    <bean id="transactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
        <property name="transactionManager" ref="transactionManager"></property>
        <property name="transactionAttributes">
            <props>
                <prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="modify*">PROPAGATION_REQUIRED,-myException</prop>
                <prop key="del*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <!-- 配置文件 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="locations">
    		<list>
    			<value>classpath:config/spring/sonar.properties</value>
    			<value>classpath:config/spring/surveymonkey.properties</value>
    		</list>
    	</property>
    </bean>
 </beans>